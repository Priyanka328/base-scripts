<%
if !produced_by.empty? || !consumed_by.empty?
%>
<table><tr>
<% if !produced_by.empty? %>
    <td><ul class="body-header-list half-size" style="margin:0;">"
    <%= render_item("Produced by") %>
    <% produced_by.each do |port_model| %>
        <li><%= link_to(port_model.task) %>.<%= port_model.name %></li>
    <% end %>
    </ul></td>
<% end %>
<% if !consumed_by.empty? %>
    <td><ul class="body-header-list half-size" style="margin:0;">"
    <%= render_item("Consumed by") %>
    <% consumed_by.each do |port_model| %>
        <li><%= link_to(port_model.task) %>.<%= port_model.name %></li>
    <% end %>
    </ul></td>
<% end %>
</tr></table>
<%
end
%>

<h2>General Info</h2>
<% typekit = Orocos.load_typekit_for(type, false) %>
<% if typekit.interface_type?(type.name) %>
This type is <b>exported</b> by the <%= typekit.name %> typekit
<ul>
    <li>it <b>can</b> be used in task interfaces</li>
    <li>it can be used in other oroGen projects by adding<br/>
    <div class="orogen_spec">
    import_types_from "<%= typekit.name %>"
    </div></li>
</ul>
<% else %>
This type is <b>not</b> exported by the <%= typekit.name %> typekit
<ul>
    <li>it <b>cannot</b> be used in task interfaces</li>
    <li>it can be used in other oroGen projects by adding<br/>
    <div class="orogen_spec">
    import_types_from "<%= typekit.name %>"
    </div></li>
</ul>
<% end %>

<% header = ["C++"]
   header << "Logging" if !intermediate_type
   header << "Ruby" if !ruby_type %>
<h2><%= header.join(",") %></h2>
<%= render_type_definition_fragment(type) %>
<% if intermediate_type %>
   <% header = ["Logging"]
      header << "Ruby" if !ruby_type %>
   <h2><%= header.join(",") %></h2>
   <p>This type cannot be logged directly. It is first converted to the <%=
   intermediate_type.name %> type, whose definition follows</p>
   <%= render_type_definition_fragment(intermediate_type) %>
<% end %>
<% if ruby_type %>
   <h2>Ruby</h2>
   <%= render_type_convertion(ruby_type) %>
<% end %>

