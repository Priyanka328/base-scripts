#! /usr/bin/env ruby

require 'rock/bundle'

Rock::Bundles.load
filename =
    if File.file?(ARGV.first)
        ARGV.shift
    elsif file = Rock::Bundles.find_file('scripts', ARGV.first, :order => :specific_first)
        ARGV.shift
        file
    elsif file = Rock::Bundles.find_file('scripts', "#{ARGV.first}.rb", :order => :specific_first)
        ARGV.shift
        file
    end

if filename
    if Rock::Bundles.is_ruby_script?(filename)
        load filename
        exit
    else
        exec(filename, *ARGV)
    end
end

do_start = false

parser = OptionParser.new
Orocos::Scripts.common_optparse_setup(parser)
parser.banner = "rock-run [--gui] task_model task_name"
parser.on '--start', 'starts the task' do
    do_start = true
end

model, name = parser.parse(ARGV)

require 'orocos'
if Orocos::Scripts.gui?
    require 'vizkit'
end
require 'orocos/scripts'

Orocos.initialize

if !name
    name = model.gsub(/::.*/, '')
    if Orocos.name_service.task_reachable?(name)
        name = "#{name}%i"
        100.times do |i|
            candidate = name % [i]
            if !Orocos.name_service.task_reachable?(candidate)
                name = candidate
                break
            end
        end
    end
end

Orocos.run model => name do
    task = Orocos::TaskContext.get(name)
    Orocos::Scripts.conf(task)

    if Orocos::Scripts.gui?
        task = task.to_proxy
        Vizkit.display task
    end

    if do_start
        task.configure if task.rtt_state == :PRE_OPERATIONAL
        task.start
    end

    if Orocos::Scripts.gui?
        Vizkit.exec
    else
        STDIN.readline
    end
end

